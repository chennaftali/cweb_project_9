!function(){"use strict";function e(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}class t{constructor(t,o,s){e(this,"_getElement",(()=>document.querySelector(this._templateCardSelector).content.querySelector(".card__list-item").cloneNode(!0))),e(this,"_toggleLikeButton",(e=>{e.target.classList.toggle("card__button_type_active")})),e(this,"_handleDelete",(()=>{this._cardElement.remove()})),this._name=t.name,this._link=t.link,this._handleCardClick=s,this._templateCardSelector=o}_setEventListeners(){this._likeButton.addEventListener("click",this._toggleLikeButton),this._deleteButton.addEventListener("click",this._handleDelete),this._cardImage.addEventListener("click",this._handleCardClick)}createCard(){this._cardElement=this._getElement(),this._cardImage=this._cardElement.querySelector(".card__img");const e=this._cardElement.querySelector(".card__title");return this._deleteButton=this._cardElement.querySelector(".card__button_type_delete"),this._likeButton=this._cardElement.querySelector(".card__button_type-like"),this._cardImage.src=this._link,this._cardImage.alt=`photo of ${this._name}`,e.textContent=this._name,this._setEventListeners(),this._cardElement}}function o(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}class s{constructor(e,t){o(this,"resetValidation",(()=>{this._inputs.forEach((e=>{this._hideError(e,this._setting)}))})),o(this,"_showError",(e=>{const t=e.validationMessage,o=document.querySelector(`#${e.id}-error`);o.textContent=t,o.classList.add(this._setting.errorClass)})),o(this,"_hideError",(e=>{const t=document.querySelector(`#${e.id}-error`);t.textContent="",t.classList.remove(this._setting.errorClass)})),o(this,"disableButton",(()=>{this._button.disabled=!0,this._button.classList.add(this._setting.inactiveButtonClass)})),o(this,"_enableButton",(()=>{this._button.disabled=!1,this._button.classList.remove(this._setting.inactiveButtonClass)})),o(this,"_toggleInputError",(e=>{e.validity.valid?this._hideError(e):this._showError(e)})),o(this,"_setEventListeners",(()=>{this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(e),this.toggleButtonState(this._inputs,this._button)}))}))})),o(this,"_isValid",(()=>this._inputs.every((e=>e.validity.valid)))),o(this,"toggleButtonState",(()=>{this._isValid()?this._enableButton(this._button):this.disableButton(this._button)})),this._setting=e,this._formElement=t,this._inputs=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._button=this._formElement.querySelector(e.submitButtonSelector)}enableValidation(){this._formElement.addEventListener("submit",(e=>e.preventDefault())),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(e),this.toggleButtonState()}))}))}}function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}class r{constructor(e){n(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),n(this,"_handleOverlayClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_open"),document.addEventListener("mousedown",this._handleOverlayClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("mousedown",this._handleOverlayClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>this.close()))}}class i extends r{constructor(e,t){super(e),this.submitHandler=t,this._form=this._popup.querySelector(".popup__form"),this.inputValues={},this._inputs=this._form.querySelectorAll(".popup__content")}_getInputValues(){return this._inputs.forEach((e=>{this.inputValues[e.name]=e.value})),this.inputValues}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._form.reset(),super.close()}}class l{constructor(e){let{profileNameSelector:t,profileJobSelector:o}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(o)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,aboutMe:o}=e;console.log("setUserInfo",this),this._profileName.textContent=t,this._profileJob.textContent=o}}const a=new class{constructor(e){let{baseUrl:t,headers:o}=e;this._baseUrl=t,this._headers=o}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch(console.log)}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"ed0bd0fb-6870-43e5-b6c3-88e44500d0b5","Content-Type":"application/json"}}),p={inputSelector:".popup__content",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},c=document.querySelector(".element__list"),_=document.querySelector(".popup__form_type-add"),u=document.querySelector(".popup__form_type-profile"),d=(document.querySelector(".popup_type-edit"),document.querySelector(".popup_type_add-card"),document.querySelector(".popup_type_image-preview"),document.querySelector(".popup__form_type-profile"),document.querySelector(".popup__content_type_name")),h=document.querySelector(".popup__content_type_aboutMe"),m=(document.querySelector(".popup__form_type-add"),document.querySelector(".popup__content_type_img-title"),document.querySelector(".popup__content_type_img-link"),document.querySelector(".profile__edit-button")),y=(document.querySelector(".popup__close_type-proile"),document.querySelector(".popup__close_type_image-preview"),document.querySelector(".profile__add-button"));document.querySelector(".popup__close_type_add"),document.querySelector(".profile__name"),document.querySelector(".profile__explorer"),a.getInitialCards().then((e=>{console.log("res",e)})),new l({profileNameSelector:".profile__name",profileJobSelector:".profile__explorer"});const b=new class{constructor(e,t){let{items:o,renderer:s}=e;this._items=o,this._renderer=s,this._container=t}addItem(e){this._renderer(e)}prependItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const o=new t(s=e,"#card__template",(()=>{f.open(s.link,s.name)})).createCard();var s;b.prependItem(o)}},c),g=new l({profileNameSelector:".profile__name",profileJobSelector:".profile__explorer"}),f=new class extends r{constructor(e){super(e),this._imageElement=this._popup.querySelector(".popup__img-preview"),this._imageCaption=this._popup.querySelector(".popup__header-img")}open(e,t){this._imageElement.src=e,this._imageElement.alt=`${t}`,this._imageCaption.textContent=t,super.open()}}(".popup_type_image-preview");f.setEventListeners();const v=new i(".popup_type-edit",(e=>{g.setUserInfo(e)}));v.setEventListeners();const E=new i(".popup_type_add-card",(e=>{console.log(e);const t={name:`${e.placeName}`,link:`${e.link}`};b.addItem(t)}));E.setEventListeners();const S=new s(p,_),q=new s(p,u);S.enableValidation(),q.enableValidation(),b.renderItems(),y.addEventListener("click",(function(){E.open(),S.disableButton()})),m.addEventListener("click",(()=>{const e=g.getUserInfo();d.value=e.name,h.value=e.job,v.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,